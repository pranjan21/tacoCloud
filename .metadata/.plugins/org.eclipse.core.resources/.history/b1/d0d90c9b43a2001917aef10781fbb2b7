package tacos.data;

import java.sql.Timestamp;
import java.sql.Types;
import java.util.Arrays;
import java.util.Date;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.core.PreparedStatementCreatorFactory;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import tacos.domains.Taco;

@Repository
public class JdbcTacoRepository implements TacoRepository {

	private JdbcTemplate jdbcTemplate;
	
	public JdbcTacoRepository(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}
	
	@Override
	public Taco save(Taco taco) {

//		this.jdbcTemplate.update(, generatedKeyHolder)
		
		
		return taco;
	}

	private long setTacoInfo(Taco taco) {
		
		taco.setCreatedAt(new Date());
		PreparedStatementCreator psc = new PreparedStatementCreatorFactory("insert into Taco (name, createdAt) values (? , ?)", Types.VARCHAR, Types.TIMESTAMP).
				newPreparedStatementCreator(Arrays.asList(taco.getName(), new Timestamp(taco.getCreatedAt())));
		KeyHolder keyHolder = new GeneratedKeyHolder();
		
		
		return 0.0;
	}
}
