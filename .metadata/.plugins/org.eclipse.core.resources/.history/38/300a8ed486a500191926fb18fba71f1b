package tacos.domains;

import java.util.Date;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.CreditCardNumber;

import lombok.Data;

@Data
@Entity
@Table(name="Taco_Order")
public class Order {

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;
	private Date placedAt;
	
	@ManyToMany(targetEntity=Taco.class)
	private List<Taco> tacos;
	
	@Size(min = 5, message = "Name should be atleast 5 characters long")
	private String name;
	
	@NotBlank(message = "The street name should not be blank")
	private String street;
	
	@NotBlank(message = "The city name should not be blank")
	private String city;
	
	@NotBlank(message = "The state name should not be blank")
	private String state;
	
	@NotBlank(message = "The zip name should not be blank")
	private String zip;
	
	@CreditCardNumber(message = "The credit card number is not valid")
	private String ccNumber;
	
	@Pattern(regexp = "^(0[1-9]|1[0-2])([\\/])([1-9][0-9])$", message = "Must be formatted MM/YY")
	private String ccExpiration;
	
	@Digits(integer = 3, fraction = 0, message = "cVV number should be only digits")
	private String ccCVV;
	 
	public void addTaco(Taco taco) {
		this.tacos.add(taco);
	}
	
	@PrePersist
	public void placedAt() {
		this.setPlacedAt(new Date());
	}

	public Date getPlacedAt() {
		return placedAt;
	}

	public void setPlacedAt(Date placedAt) {
		this.placedAt = placedAt;
	}
}

